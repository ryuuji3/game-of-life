{"remainingRequest":"/home/josh/Projects/game-of-life/node_modules/babel-loader/lib/index.js!/home/josh/Projects/game-of-life/node_modules/eslint-loader/index.js??ref--13-0!/home/josh/Projects/game-of-life/src/functions/getNextGeneration.js","dependencies":[{"path":"/home/josh/Projects/game-of-life/src/functions/getNextGeneration.js","mtime":1584830092839},{"path":"/home/josh/Projects/game-of-life/node_modules/cache-loader/dist/cjs.js","mtime":1584814823703},{"path":"/home/josh/Projects/game-of-life/node_modules/babel-loader/lib/index.js","mtime":1584814823699},{"path":"/home/josh/Projects/game-of-life/node_modules/eslint-loader/index.js","mtime":1584814856628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKCi8qKgogKiBVcGRhdGUgY2VsbHMgbWFwIGFuZCBhcHBseSBnYW1lIG9mIGxpZmUgbG9naWMgdG8ga2lsbCBvciByZXZpdmUvY3JlYXRlIGNlbGxzCiAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXROZXh0R2VuZXJhdGlvbihjdXJyZW50R2VuZXJhdGlvbiwgcm93Q291bnQpIHsKICByZXR1cm4gY3VycmVudEdlbmVyYXRpb24ubWFwKGZ1bmN0aW9uIChjZWxsLCBpbmRleCkgewogICAgdmFyIGFsaXZlID0gY2VsbDsKICAgIHZhciBuZWlnaGJvcnMgPSBjb3VudE5laWdoYm9ycyhjdXJyZW50R2VuZXJhdGlvbiwgaW5kZXgsIHJvd0NvdW50KTsKCiAgICBpZiAoYWxpdmUgJiYgbmVpZ2hib3JzID4gMSAmJiBuZWlnaGJvcnMgPCA0IHx8IC8vIHN0YXlzIGFsaXZlCiAgICAhYWxpdmUgJiYgbmVpZ2hib3JzID09PSAzIC8vIHJldml2ZWQKICAgICkgewogICAgICAgIGFsaXZlID0gMTsKICAgICAgfSBlbHNlIHsKICAgICAgYWxpdmUgPSAwOwogICAgfQoKICAgIHJldHVybiBhbGl2ZTsKICB9KTsKfQovKioKICogQ291bnQgbmVpZ2hib3JpbmcgY2VsbHMKICoKICogQHBhcmFtIGNlbGxzCiAqIEBwYXJhbSBpbmRleAogKiBAcGFyYW0gcm93cwogKiBAcmV0dXJucyB7Kn0KICovCgpmdW5jdGlvbiBjb3VudE5laWdoYm9ycyhjZWxscywgaW5kZXgsIHJvd3MpIHsKICByZXR1cm4gY2VsbHNbaW5kZXggLSAxXSAvLyBsZWZ0CiAgKyBjZWxsc1tpbmRleCArIDFdIC8vIHJpZ2h0CiAgKyBjZWxsc1tpbmRleCAtIHJvd3NdIC8vIHRvcAogICsgY2VsbHNbaW5kZXggKyByb3dzXSAvLyBib3R0b20KICArIGNlbGxzW2luZGV4IC0gcm93cyAtIDFdIC8vIHRvcCBsZWZ0CiAgKyBjZWxsc1tpbmRleCAtIHJvd3MgKyAxXSAvLyB0b3AgcmlnaHQKICArIGNlbGxzW2luZGV4ICsgcm93cyAtIDFdIC8vIGJvdHRvbSBsZWZ0CiAgKyBjZWxsc1tpbmRleCArIHJvd3MgKyAxXTsgLy8gYm90dG9tIHJpZ2h0Cn0="},{"version":3,"sources":["/home/josh/Projects/game-of-life/src/functions/getNextGeneration.js"],"names":["getNextGeneration","currentGeneration","rowCount","map","cell","index","alive","neighbors","countNeighbors","cells","rows"],"mappings":";;AAAA;;;AAGA,eAAe,SAASA,iBAAT,CAA2BC,iBAA3B,EAA8CC,QAA9C,EAAwD;AACnE,SAAOD,iBAAiB,CAACE,GAAlB,CAAsB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1C,QAAIC,KAAK,GAAGF,IAAZ;AACA,QAAMG,SAAS,GAAGC,cAAc,CAACP,iBAAD,EAAoBI,KAApB,EAA2BH,QAA3B,CAAhC;;AAEA,QACMI,KAAK,IAAIC,SAAS,GAAG,CAArB,IAA0BA,SAAS,GAAG,CAAxC,IAA4C;AACxC,KAACD,KAAD,IAAUC,SAAS,KAAK,CAFhC,CAEmC;AAFnC,MAGE;AACED,QAAAA,KAAK,GAAG,CAAR;AACH,OALD,MAKO;AACHA,MAAAA,KAAK,GAAG,CAAR;AACH;;AAED,WAAOA,KAAP;AACH,GAdM,CAAP;AAeH;AAED;;;;;;;;;AAQA,SAASE,cAAT,CAAwBC,KAAxB,EAA+BJ,KAA/B,EAAsCK,IAAtC,EAA4C;AACxC,SAAOD,KAAK,CAACJ,KAAK,GAAG,CAAT,CAAL,CAAiB;AAAjB,IACDI,KAAK,CAACJ,KAAK,GAAG,CAAT,CADJ,CACgB;AADhB,IAEDI,KAAK,CAACJ,KAAK,GAAGK,IAAT,CAFJ,CAEmB;AAFnB,IAGDD,KAAK,CAACJ,KAAK,GAAGK,IAAT,CAHJ,CAGmB;AAHnB,IAIDD,KAAK,CAACJ,KAAK,GAAGK,IAAR,GAAe,CAAhB,CAJJ,CAIuB;AAJvB,IAKDD,KAAK,CAACJ,KAAK,GAAGK,IAAR,GAAe,CAAhB,CALJ,CAKuB;AALvB,IAMDD,KAAK,CAACJ,KAAK,GAAGK,IAAR,GAAe,CAAhB,CANJ,CAMuB;AANvB,IAODD,KAAK,CAACJ,KAAK,GAAGK,IAAR,GAAe,CAAhB,CAPX,CADwC,CAQV;AACjC","sourcesContent":["/**\n * Update cells map and apply game of life logic to kill or revive/create cells\n */\nexport default function getNextGeneration(currentGeneration, rowCount) {\n    return currentGeneration.map((cell, index) => {\n        let alive = cell\n        const neighbors = countNeighbors(currentGeneration, index, rowCount)\n\n        if (\n            ( alive && neighbors > 1 && neighbors < 4 ) // stays alive\n            || (!alive && neighbors === 3) // revived\n        ) {\n            alive = 1\n        } else {\n            alive = 0\n        }\n\n        return alive\n    })\n}\n\n/**\n * Count neighboring cells\n *\n * @param cells\n * @param index\n * @param rows\n * @returns {*}\n */\nfunction countNeighbors(cells, index, rows) {\n    return cells[index - 1] // left\n        + cells[index + 1] // right\n        + cells[index - rows] // top\n        + cells[index + rows] // bottom\n        + cells[index - rows - 1] // top left\n        + cells[index - rows + 1] // top right\n        + cells[index + rows - 1] // bottom left\n        + cells[index + rows + 1] // bottom right\n}"]}]}