{"remainingRequest":"/home/josh/Projects/game-of-life/node_modules/thread-loader/dist/cjs.js!/home/josh/Projects/game-of-life/node_modules/babel-loader/lib/index.js!/home/josh/Projects/game-of-life/node_modules/eslint-loader/index.js??ref--13-0!/home/josh/Projects/game-of-life/src/functions/render.js","dependencies":[{"path":"/home/josh/Projects/game-of-life/src/functions/render.js","mtime":1584831539854},{"path":"/home/josh/Projects/game-of-life/node_modules/cache-loader/dist/cjs.js","mtime":1584814823703},{"path":"/home/josh/Projects/game-of-life/node_modules/thread-loader/dist/cjs.js","mtime":1584814824955},{"path":"/home/josh/Projects/game-of-life/node_modules/babel-loader/lib/index.js","mtime":1584814823699},{"path":"/home/josh/Projects/game-of-life/node_modules/eslint-loader/index.js","mtime":1584814856628}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy93ZWIuZG9tLWNvbGxlY3Rpb25zLmZvci1lYWNoIjsKCi8qKgogKiBSZW5kZXIuCiAqCiAqIEBwYXJhbSB7Q2FudmFzUmVuZGVyaW5nQ29udGV4dDJEfSBjb250ZXh0CiAqIEBwYXJhbSB7QXJyYXk8bnVtYmVyPn0gY2VsbHMKICogQHBhcmFtIHtudW1iZXJ9IGhlaWdodAogKiBAcGFyYW0ge251bWJlcn0gd2lkdGgKICogQHBhcmFtIHtudW1iZXJ9IHJvd3MKICogQHBhcmFtIHtudW1iZXJ9IGNvbHVtbnMKICogQHBhcmFtIHtib29sZWFufSBncmlkCiAqLwpleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZW5kZXIoY29udGV4dCwgY2VsbHMsIGhlaWdodCwgd2lkdGgsIHJvd3MsIGNvbHVtbnMpIHsKICB2YXIgZ3JpZCA9IGFyZ3VtZW50cy5sZW5ndGggPiA2ICYmIGFyZ3VtZW50c1s2XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzZdIDogdHJ1ZTsKICB2YXIgY2VsbEhlaWdodCA9IGhlaWdodCAvIHJvd3M7CiAgdmFyIGNlbGxXaWR0aCA9IHdpZHRoIC8gY29sdW1uczsKICBjb250ZXh0LnN0cm9rZVN0eWxlID0gIiMwNjAiOwogIGNvbnRleHQuc3Ryb2tlV2lkdGggPSAiMXB4IjsKICBjZWxscy5mb3JFYWNoKGZ1bmN0aW9uIChjZWxsLCBpbmRleCkgewogICAgaWYgKGNlbGwpIHsKICAgICAgY29udGV4dC5maWxsU3R5bGUgPSAiIzA1MCI7CiAgICB9IGVsc2UgewogICAgICBjb250ZXh0LmZpbGxTdHlsZSA9ICIjMDAwIjsKICAgIH0KCiAgICB2YXIgeCA9IGluZGV4ICUgcm93czsKICAgIHZhciB5ID0gTWF0aC5mbG9vcihpbmRleCAvIHJvd3MpOyAvLyBDZWxsCgogICAgY29udGV4dC5maWxsUmVjdCh4ICogY2VsbFdpZHRoLCB5ICogY2VsbEhlaWdodCwgY2VsbFdpZHRoLCBjZWxsSGVpZ2h0KTsgLy8gR3JpZAoKICAgIGlmIChncmlkKSB7CiAgICAgIGNvbnRleHQuc3Ryb2tlUmVjdCh4ICogY2VsbFdpZHRoLCB5ICogY2VsbEhlaWdodCwgY2VsbFdpZHRoLCBjZWxsSGVpZ2h0KTsKICAgIH0KICB9KTsKfQ=="},{"version":3,"sources":["/home/josh/Projects/game-of-life/src/functions/render.js"],"names":["render","context","cells","height","width","rows","columns","grid","cellHeight","cellWidth","strokeStyle","strokeWidth","forEach","cell","index","fillStyle","x","y","Math","floor","fillRect","strokeRect"],"mappings":";;;AAAA;;;;;;;;;;;AAWA,eAAe,SAASA,MAAT,CAAgBC,OAAhB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwCC,KAAxC,EAA+CC,IAA/C,EAAqDC,OAArD,EAA2E;AAAA,MAAbC,IAAa,uEAAN,IAAM;AACtF,MAAMC,UAAU,GAAGL,MAAM,GAAGE,IAA5B;AACA,MAAMI,SAAS,GAAGL,KAAK,GAAGE,OAA1B;AAEAL,EAAAA,OAAO,CAACS,WAAR,GAAsB,MAAtB;AACAT,EAAAA,OAAO,CAACU,WAAR,GAAsB,KAAtB;AAEAT,EAAAA,KAAK,CAACU,OAAN,CAAc,UAAEC,IAAF,EAAQC,KAAR,EAAmB;AAC7B,QAAID,IAAJ,EAAU;AACNZ,MAAAA,OAAO,CAACc,SAAR,GAAoB,MAApB;AACH,KAFD,MAEO;AACHd,MAAAA,OAAO,CAACc,SAAR,GAAoB,MAApB;AACH;;AAED,QAAMC,CAAC,GAAGF,KAAK,GAAGT,IAAlB;AACA,QAAMY,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAK,GAAGT,IAAnB,CAAV,CAR6B,CAU7B;;AACAJ,IAAAA,OAAO,CAACmB,QAAR,CACIJ,CAAC,GAAGP,SADR,EAEIQ,CAAC,GAAGT,UAFR,EAGIC,SAHJ,EAIID,UAJJ,EAX6B,CAiB7B;;AACA,QAAID,IAAJ,EAAU;AACNN,MAAAA,OAAO,CAACoB,UAAR,CACAL,CAAC,GAAGP,SADJ,EAEAQ,CAAC,GAAGT,UAFJ,EAGAC,SAHA,EAIAD,UAJA;AAMH;AACJ,GA1BD;AA2BH","sourcesContent":["/**\n * Render.\n *\n * @param {CanvasRenderingContext2D} context\n * @param {Array<number>} cells\n * @param {number} height\n * @param {number} width\n * @param {number} rows\n * @param {number} columns\n * @param {boolean} grid\n */\nexport default function render(context, cells, height, width, rows, columns, grid = true) {\n    const cellHeight = height / rows;\n    const cellWidth = width / columns;\n\n    context.strokeStyle = \"#060\";\n    context.strokeWidth = \"1px\";\n\n    cells.forEach(( cell, index ) => {\n        if (cell) {\n            context.fillStyle = \"#050\"\n        } else {\n            context.fillStyle = \"#000\"\n        }\n\n        const x = index % rows\n        const y = Math.floor(index / rows)\n\n        // Cell\n        context.fillRect(\n            x * cellWidth,\n            y * cellHeight,\n            cellWidth,\n            cellHeight\n        )\n        // Grid\n        if (grid) {\n            context.strokeRect(\n            x * cellWidth,\n            y * cellHeight,\n            cellWidth,\n            cellHeight\n            )\n        }\n    })\n}"]}]}